{"version":3,"sources":["components/TodoTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodoTask","task","completeTask","className","taskName","deadline","onClick","App","react","setTask","setDeadline","todolist","setTodolist","handleChange","event","target","name","value","Number","taskNameToDelete","filter","type","placeholder","onChange","newTask","map","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA0BeA,EAlBE,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aACxB,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,UAAf,UACE,0CAAaF,EAAKG,YAClB,8CAAiBH,EAAKI,SAAtB,WACA,wBACEC,QAAS,WACPJ,EAAaD,EAAKG,WAFtB,qBCiDOG,EA1DO,WACpB,MAAwBC,WAAuB,IAA/C,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAAgCD,WAAuB,GAAvD,mBAAOH,EAAP,KAAiBK,EAAjB,KACA,EAAgCF,WAAwB,IAAxD,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACM,SAAtBA,EAAMC,OAAOC,KACfP,EAAQK,EAAMC,OAAOE,OAErBP,EAAYQ,OAAOJ,EAAMC,OAAOE,SAW9Bf,EAAe,SAACiB,GACpBP,EACED,EAASS,QAAO,SAACnB,GACf,OAAOA,EAAKG,UAAYe,OAK9B,OACE,sBAAKhB,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEkB,KAAK,OACLC,YAAY,gBACZN,KAAK,OACLC,MAAOhB,EACPsB,SAAUV,IAEZ,uBACEQ,KAAK,SACLC,YAAY,uBACZN,KAAK,WACLC,MAAOZ,EACPkB,SAAUV,OAGd,wBAAQP,QAlCE,WACd,IAAMkB,EAAU,CAAEpB,SAAUH,EAAMI,SAAUA,GAC5CO,EAAY,GAAD,mBAAKD,GAAL,CAAea,KAC1Bf,EAAQ,IACRC,EAAY,IA8BR,yBAEF,qBAAKP,UAAU,YAAf,SACGQ,EAASc,KAAI,SAACxB,EAAayB,GAC1B,OAAO,cAAC,EAAD,CAAoBzB,KAAMA,EAAMC,aAAcA,GAA/BwB,YC1CjBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.ef6502f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ITask } from \"../interfaces\";\r\n\r\ninterface TodoTaskProps {\r\n  task: ITask;\r\n  completeTask(taskNameToDelete: string): void;\r\n}\r\n\r\nconst TodoTask = ({ task, completeTask }: TodoTaskProps) => {\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"content\">\r\n        <span>Todo: {task.taskName}</span>\r\n        <span>Deadline: {task.deadline} days</span>\r\n        <button\r\n          onClick={() => {\r\n            completeTask(task.taskName);\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoTask;\r\n","import React, * as react from \"react\";\nimport \"./App.css\";\nimport TodoTask from \"./components/TodoTask\";\nimport { ITask } from \"./interfaces\";\n\nconst App: react.FC = () => {\n  const [task, setTask] = react.useState<string>(\"\");\n  const [deadline, setDeadline] = react.useState<number>(0);\n  const [todolist, setTodolist] = react.useState<ITask[]>([]);\n\n  const handleChange = (event: react.ChangeEvent<HTMLInputElement>): void => {\n    if (event.target.name === \"task\") {\n      setTask(event.target.value);\n    } else {\n      setDeadline(Number(event.target.value));\n    }\n  };\n\n  const addTask = (): void => {\n    const newTask = { taskName: task, deadline: deadline };\n    setTodolist([...todolist, newTask]);\n    setTask(\"\");\n    setDeadline(0);\n  };\n\n  const completeTask = (taskNameToDelete: string): void => {\n    setTodolist(\n      todolist.filter((task) => {\n        return task.taskName != taskNameToDelete;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Task to do...\"\n            name=\"task\"\n            value={task}\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Deadline (in Days)..\"\n            name=\"deadline\"\n            value={deadline}\n            onChange={handleChange}\n          />\n        </div>\n        <button onClick={addTask}>Add Task</button>\n      </div>\n      <div className=\"todo-list\">\n        {todolist.map((task: ITask, key: number) => {\n          return <TodoTask key={key} task={task} completeTask={completeTask} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}